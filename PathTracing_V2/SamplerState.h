#pragma once
#include "DX.h"
class SamplerState
{
public:
	SamplerState(
		D3D11_FILTER Filter = D3D11_FILTER_MIN_MAG_MIP_LINEAR,
		D3D11_TEXTURE_ADDRESS_MODE AddressU = D3D11_TEXTURE_ADDRESS_WRAP,
		D3D11_TEXTURE_ADDRESS_MODE AddressV = D3D11_TEXTURE_ADDRESS_WRAP,
		D3D11_TEXTURE_ADDRESS_MODE AddressW = D3D11_TEXTURE_ADDRESS_WRAP,
		D3D11_COMPARISON_FUNC ComparisonFunc = D3D11_COMPARISON_NEVER,
		FLOAT MinLOD = 0,
		FLOAT MaxLOD = D3D11_FLOAT32_MAX);
	SamplerState(D3D11_SAMPLER_DESC samplerDesc);
	~SamplerState();
	void Release();
	void LoadData(
		D3D11_FILTER Filter = D3D11_FILTER_MIN_MAG_MIP_LINEAR,
		D3D11_TEXTURE_ADDRESS_MODE AddressU = D3D11_TEXTURE_ADDRESS_WRAP,
		D3D11_TEXTURE_ADDRESS_MODE AddressV = D3D11_TEXTURE_ADDRESS_WRAP,
		D3D11_TEXTURE_ADDRESS_MODE AddressW = D3D11_TEXTURE_ADDRESS_WRAP,
		D3D11_COMPARISON_FUNC ComparisonFunc = D3D11_COMPARISON_NEVER,
		FLOAT MinLOD = 0,
		FLOAT MaxLOD = D3D11_FLOAT32_MAX);
	void Set(UINT startSlot = 0, UINT NumSamplers = 1);
	ID3D11SamplerState* samplerState;

};

